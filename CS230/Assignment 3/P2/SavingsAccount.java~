/** 
 * Methods:
 * accountNumber and balance inherited from parent class Account
 * method compareTo()
 * method to String()
 * final method deposit()
 */
import java.text.DecimalFormat;  //used to format output

public class CheckingAccount extends Account {
  private final double minimumBalance = 50;
  private final double overdraftFee = 25;
  
  /**
   *   Account Constructor
   *   @param balance  the balance of the account; required to set up an account
   */
  public CheckingAccount(double balance, String type) 
  {
    super(balance, type);
  }
  
  public void withdraw(double amount) 
  { 
    if (balance - amount < minimumBalance) {
      incurOverdraftFee(amount);
    }
    else {
      balance = balance - amount;
    }
  }
  
  // Might get rid of this
  public boolean incurOverdraftFee (double amount)
  {
    balance = balance - amount - overdraftFee;
    return true;
  }
 
  /**
   *  Method final compareTo()
   *  Compares the invoking and the param shapes by area
   *  @param otherShape  Shape instance to be compared to the invoker
   *  @return int   0 if the two shapes have the same area, 
   *                    positive integer is the invoking shape's area is greatet
   *                    negative integer is the invoking shape's area is smaller
   */
  /*final public int compareTo(Shape otherShape) {
    if (this.area() == otherShape.area()) return 0;
    if (this.area() > otherShape.area()) return 1;
    return -1;
  }*/
  
  /**
   *  Method final toString() <br>
   *  <blockquote>Final method to Display the Class</blockquote>
   *  @return String
   */
 /*final public String toString() {
    DecimalFormat fmt = new DecimalFormat("0.###");
    return this.name + " of area " + fmt.format(area());
  }*/
  
  public static void main(String args[]) {
    CheckingAccount c1= new CheckingAccount(100, "Checking Account"); 
    System.out.println("The balance of checking account 1 is: " + c1.getBalance());
    c1.withdraw(1000);
    System.out.println("The balance of checking account 1 is: " + c1.getBalance() + " after withdrawing $100");
    System.out.println(c1);
  }
} // End Checking Account Class