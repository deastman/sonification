/** 
 * Methods:
 * Abstract methods withdraw() - to be implemented in inheriting classes
 * method compareTo()
 * method to String()
 * final method deposit()
 */
import java.text.DecimalFormat;  //used to format output

public class CheckingAccount extends Account {
  //private int accountNumber;
  //private double balance;
  //private static int lastAccountNumber = (int)(Math.random() * 10000000);
  
  /**
   *   Account Constructor
   *   @param balance  the balance of the account-required to set up an account
   */
  public CheckingAccount(double balance) 
  {
    super(balance);
  }
  
  public void withdraw(double amount) 
  {   
    balance = balance - amount;
  }
    
  
  // Cannot be modified by inheriting classes 
  /*private final void deposit(double amount) 
  {  
    balance = balance + amount;
  }*/
  
  // Account balance getter method
  /*public double getBalance() 
  {
   return balance;
  }*/
  
  /**
   *    Method abstract withdraw() 
   *    To be implemented by the inheriting class.
   *
   *    @return the //.
   */
 
  /**
   *  Method final compareTo()
   *  Compares the invoking and the param shapes by area
   *  @param otherShape  Shape instance to be compared to the invoker
   *  @return int   0 if the two shapes have the same area, 
   *                    positive integer is the invoking shape's area is greatet
   *                    negative integer is the invoking shape's area is smaller
   */
  /*final public int compareTo(Shape otherShape) {
    if (this.area() == otherShape.area()) return 0;
    if (this.area() > otherShape.area()) return 1;
    return -1;
  }*/
  
  /**
   *  Method final toString() <br>
   *  <blockquote>Final method to Display the Class</blockquote>
   *  @return String
   */
 /*final public String toString() {
    DecimalFormat fmt = new DecimalFormat("0.###");
    return this.name + " of area " + fmt.format(area());
  }*/
  
  public static void main(String args[]) {
  CheckingAccount c1= new CheckingAccount(200); 
  System.out.println("The balance of checking account 1 is: " + c1.getBalance());
  }
} // End Abstract Shape Class
